<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goodsManagement.mapper.GoodsDtoMapper">
    <resultMap id="BaseResultMap" type="org.goodsManagement.po.GoodsDto">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="goodname" property="goodname" jdbcType="VARCHAR"/>
        <result column="goodunit" property="goodunit" jdbcType="VARCHAR"/>
        <result column="goodnumbers" property="goodnumbers" jdbcType="INTEGER"/>
        <result column="goodtype" property="goodtype" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, goodname, goodunit, goodnumbers, goodtype
  </sql>

    <select id="WarehouseInventory" resultType="org.goodsManagement.vo.Warehouse">
        SELECT id, goodname, sum(goodnumbers) as sumnum FROM goods
        where goodname = #{goodname,jdbcType=VARCHAR}
        GROUP BY goodname;
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="org.goodsManagement.po.GoodsDto">
    insert into goods (id, goodname, goodunit,
      goodnumbers, goodtype)
    values (#{id,jdbcType=INTEGER}, #{goodname,jdbcType=VARCHAR}, #{goodunit,jdbcType=VARCHAR}, 
      #{goodnumbers,jdbcType=INTEGER}, #{goodtype,jdbcType=VARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="org.goodsManagement.po.GoodsDto">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="goodname != null">
                goodname,
            </if>
            <if test="goodunit != null">
                goodunit,
            </if>
            <if test="goodnumbers != null">
                goodnumbers,
            </if>
            <if test="goodtype != null">
                goodtype,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="goodname != null">
                #{goodname,jdbcType=VARCHAR},
            </if>
            <if test="goodunit != null">
                #{goodunit,jdbcType=VARCHAR},
            </if>
            <if test="goodnumbers != null">
                #{goodnumbers,jdbcType=INTEGER},
            </if>
            <if test="goodtype != null">
                #{goodtype,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.goodsManagement.po.GoodsDto">
        update goods
        <set>
            <if test="goodname != null">
                goodname = #{goodname,jdbcType=VARCHAR},
            </if>
            <if test="goodunit != null">
                goodunit = #{goodunit,jdbcType=VARCHAR},
            </if>
            <if test="goodnumbers != null">
                goodnumbers = #{goodnumbers,jdbcType=INTEGER},
            </if>
            <if test="goodtype != null">
                goodtype = #{goodtype,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.goodsManagement.po.GoodsDto">
    update goods
    set goodname = #{goodname,jdbcType=VARCHAR},
      goodunit = #{goodunit,jdbcType=VARCHAR},
      goodnumbers = #{goodnumbers,jdbcType=INTEGER},
      goodtype = #{goodtype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectByName" resultType="org.goodsManagement.po.GoodsDto" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from goods
        where goodname = #{name,jdbcType=VARCHAR}
    </select>
    <select id="selectGroupByName" resultType="org.goodsManagement.vo.GoodsVo" >
        select
        goodname ,
        goodunit
        from goods
        GROUP BY goodname
    </select>
</mapper>