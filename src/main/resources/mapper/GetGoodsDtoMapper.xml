<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.goodsManagement.mapper.GetGoodsDtoMapper">
    <resultMap id="BaseResultMap" type="org.goodsManagement.po.GetGoodsDto">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="staffid" property="staffid" jdbcType="INTEGER"/>
        <result column="goodid" property="goodid" jdbcType="INTEGER"/>
        <result column="getnumber" property="getnumber" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, staffid, goodid, getnumber
  </sql>


    <!-- 自己添加  -->
    <select id="getGoodsById" parameterType="java.lang.Integer" resultType="org.goodsManagement.vo.GetGoodsVO">
        SELECT getgoods.id, staff.staffname, goods.goodname, goods.goodtype ,getgoods.getnumber
        FROM getgoods
        LEFT JOIN staff ON getgoods.staffid = staff.id
        LEFT JOIN goods ON getgoods.goodid = goods.id
        WHERE getgoods.id = #{id};
    </select>

    <select id="allGetGoodsInfo" resultType="org.goodsManagement.vo.GetGoodsVO">
        SELECT getgoods.id, staff.staffname, goods.goodname,goods.goodtype, getgoods.getnumber
        FROM getgoods
        LEFT JOIN staff ON getgoods.staffid = staff.id
        LEFT JOIN goods ON getgoods.goodid = goods.id
    </select>


    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from getgoods
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from getgoods
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="org.goodsManagement.po.GetGoodsDto">
    insert into getgoods (id, staffid, goodid,
      getnumber)
    values (#{id,jdbcType=INTEGER}, #{staffid,jdbcType=INTEGER}, #{goodid,jdbcType=INTEGER}, 
      #{getnumber,jdbcType=INTEGER})
  </insert>

    <insert id="insertSelective" parameterType="org.goodsManagement.po.GetGoodsDto">
        insert into getgoods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="staffid != null">
                staffid,
            </if>
            <if test="goodid != null">
                goodid,
            </if>
            <if test="getnumber != null">
                getnumber,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="staffid != null">
                #{staffid,jdbcType=INTEGER},
            </if>
            <if test="goodid != null">
                #{goodid,jdbcType=INTEGER},
            </if>
            <if test="getnumber != null">
                #{getnumber,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="org.goodsManagement.po.GetGoodsDto">
        update getgoods
        <set>
            <if test="staffid != null">
                staffid = #{staffid,jdbcType=INTEGER},
            </if>
            <if test="goodid != null">
                goodid = #{goodid,jdbcType=INTEGER},
            </if>
            <if test="getnumber != null">
                getnumber = #{getnumber,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="org.goodsManagement.po.GetGoodsDto">
    update getgoods
    set staffid = #{staffid,jdbcType=INTEGER},
      goodid = #{goodid,jdbcType=INTEGER},
      getnumber = #{getnumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectAll" resultType="org.goodsManagement.vo.DeliveryDetailVO">
        SELECT getgoods.getnumber,staff.staffname,
        staff.id,staff.sex,dept.deptname,
        goods.goodname,goods.goodtype
        FROM getgoods LEFT OUTER JOIN staff ON staff.id = getgoods.staffid
        LEFT OUTER JOIN dept ON dept.id = staff.deptid
        LEFT OUTER JOIN goods ON goods.id = getgoods.goodid
    </select>

    <select id="counts" resultType="INTEGER">
        select COUNT(*) FROM getgoods;
    </select>
</mapper>